<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:int="http://www.springframework.org/schema/integration"
    xmlns:task="http://www.springframework.org/schema/task" 
    xmlns:int-kafka="http://www.springframework.org/schema/integration/kafka"
    xsi:schemaLocation="http://www.springframework.org/schema/integration/kafka 
                        http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd
                        http://www.springframework.org/schema/integration 
                        http://www.springframework.org/schema/integration/spring-integration.xsd
                        http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/task  
                        http://www.springframework.org/schema/task/spring-task-4.1.xsd">
                       
    <!-- 自己的处理kafka消息的类 -->
    <bean id="myConsumer" class="com.cai.MyConsumer"/>                  
     
     <!-- 处理kafka消息的通道 -->
    <int:channel id="inputFromKafka">
    	<int:dispatcher task-executor="taskExecutor"/>
    </int:channel>
    
    <!-- 配置接收消息的适配器，bean和处理消息的业务方法 -->
    <int:outbound-channel-adapter channel="inputFromKafka" ref="myConsumer" method="onMessage" />
    <!-- 处理消息的线程池 -->     
    <task:executor id="taskExecutor" pool-size="50" keep-alive="200" rejection-policy="CALLER_RUNS" queue-capacity="100"/>
    
	<int-kafka:message-driven-channel-adapter 
		auto-startup="true" 
		channel="inputFromKafka" 
		listener-container="kafka-container" mode="record" />
		
   <!-- kafka参数配置 -->
    <bean id="consumerProperties" class="java.util.HashMap">  
        <constructor-arg>  
            <map>  
                <entry key="bootstrap.servers" value="${kafka-bootstrap.servers}"/>  
                <entry key="group.id" value="${group-id}"/>  
                <entry key="auto.offset.reset" value="${auto.offset.reset}"/>  
                <entry key="enable.auto.commit" value="${enable.auto.commit}"/>  
                <entry key="auto.commit.interval.ms" value="${auto.commit.interval.ms}"/>  
                <entry key="session.timeout.ms" value="${session.timeout.ms}"/>  
                <entry key="max.poll.records" value="${max.poll.records}"/>  
                <entry key="key.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>  
                <entry key="value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>  
            </map>
        </constructor-arg>  
    </bean>
  
  
    <!-- 创建consumerFactory bean -->  
    <bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">  
        <constructor-arg>  
            <ref bean="consumerProperties"/>  
        </constructor-arg>  
    </bean>  
  
    <bean id="kafka-container" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" >  
        <constructor-arg name="consumerFactory" ref="consumerFactory"/>
        <constructor-arg name="containerProperties" ref="containerProperties"/>
        <!-- <property name="concurrency" value="${kafka-listener-concurrency-num}" /> -->
    </bean>
    <bean id="containerProperties" class="org.springframework.kafka.listener.config.ContainerProperties">  
        <constructor-arg value="${kafka-topic}"/>
        <!-- 手动提交offset,如果enable.auto.commit=true,这里就不用配置 -->
        <property name="ackMode" value="MANUAL_IMMEDIATE"/>
    </bean>
    
</beans>